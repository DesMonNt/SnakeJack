class List {
    field Array Data;
    field int Length;
    field int Last;

    constructor List new(){
        let Length = 8;
        let Last = 0;
        let Data = Array.new(Length);
        
        return this;
    } 

    method void append(Point point){
        if (Last = Length){
            do expand();
        }

        let Data[Last] = point;
        let Last = Last + 1;

        return;
    }

    method void expand(){
        var Array newData;
        var int newLength;
        var int counter;
    
        let newLength = Length * 2;
        let newData = Array.new(newLength);
        let counter = 0;

        while (counter < Length){
            let newData[counter] = Data[counter];
            let counter = counter + 1;
        }

        do Data.dispose();

        let Length = newLength;
        let Data = newData;

        return;
    }

    method Point get(int index){
        return Data[index];
    }

    method void set(int index, Point point){
        let Data[index] = point;
        return;
    }    

    method int getCount(){
        return Last;
    }

    method void dispose(){
        var int i;
        var Point point;

        while (i < Last + 1){
            let point = Data[i];
            do point.dispose();
            
            let i = i + 1;
        }

        do Data.dispose();
        do Memory.deAlloc(this);
        
        return;
    }
}